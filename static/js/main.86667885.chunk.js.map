{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","m","message","src","avatar","alt","img","body","triangle","title","name","descr","text","time","messageData1","messageData2","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","affairWrap","_id","priority","onClick","deleteAffairCallback","children","Affairs","mappedAffairs","data","map","a","key","wrapper","btnWrap","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","inputWrap","e","currentTarget","value","inputStyle","Greeting","setNameCallback","addUser","totalUsers","inputClass","errorInputNew","btn","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","newUsers","v1","SuperCheckbox","onChangeChecked","checkbox","labelWrap","checked","HW4","setText","showAlert","setChecked","column","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,sBAAsB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,wB,iBCApPD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,QAAU,2B,gBCAzID,EAAOC,QAAU,CAAC,UAAY,kCAAkC,WAAa,mCAAmC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,kBCAxND,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,MAAQ,wBAAwB,cAAgB,gCAAgC,cAAgB,kC,gBCA9LD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,SAAW,gCAAgC,cAAgB,uC,gBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,MAAQ,2BAA2B,IAAM,2B,kBCAlGD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,0KC0BrCC,MAhBf,SAAiBC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACd,yBAAKC,IAAKJ,EAAMK,OAAQC,IAAI,GAAGL,UAAWC,IAAEK,MAC5C,yBAAKN,UAAWC,IAAEM,MACd,yBAAKP,UAAWC,IAAEO,WAClB,yBAAKR,UAAWC,IAAEQ,OAAQV,EAAMW,MAChC,yBAAKV,UAAWC,IAAEU,OACd,yBAAKX,UAAWC,IAAEW,MAAOb,EAAMG,SAC/B,yBAAKF,UAAWC,IAAEY,MAAOd,EAAMc,UCjB7CC,EACM,yDADNA,EAEI,6CAFJA,EAGO,kFAHPA,EAII,QAGJC,EACM,4CADNA,EAEI,yDAFJA,EAGO,0IAHPA,EAII,QAgCKC,MA7Bf,WACI,OACI,6BACI,6BADJ,cAGI,6BAAK,6BAAK,6BAGV,kBAAC,EAAD,CACIZ,OAAQU,EACRJ,KAAMI,EACNZ,QAASY,EACTD,KAAMC,IAEV,kBAAC,EAAD,CACIV,OAAQW,EACRL,KAAMK,EACNb,QAASa,EACTF,KAAME,IAGV,6BAGA,+B,+BCfGE,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKlB,EAGR,EAHQA,UACFmB,EAEN,mCACKC,EAAc,UAAMF,EAAMG,IAAEH,IAAMG,IAAEC,QAAtB,YAAiCtB,GAErD,OACI,0CACIA,UAAWoB,GACPD,K,gBCMDI,MAhBf,SAAgBxB,GAKZ,OACI,yBAAKC,UAAWqB,IAAEG,QACd,yBAAKxB,UAAWqB,IAAEI,YACb1B,EAAMyB,OAAOE,IADlB,KACyB3B,EAAMyB,OAAOd,KADtC,MAC+CX,EAAMyB,OAAOG,UAE5D,kBAAC,EAAD,CAAaC,QATE,WACnB7B,EAAM8B,qBAAqB9B,EAAMyB,OAAOE,MAQEI,SAAU,QCoB7CC,MA7Bf,SAAiBhC,GACb,IAAMiC,EAAgBjC,EAAMkC,KAAKC,KAAI,SAACC,GAAD,OACjC,kBAAC,EAAD,CACIC,IAAKD,EAAET,IACPF,OAAQW,EACRN,qBAAsB9B,EAAM8B,0BASpC,OACI,yBAAK7B,UAAWqB,IAAEgB,SAEbL,EACD,yBAAKhC,UAAWqB,IAAEiB,SAClB,kBAAC,EAAD,CAAaV,QAVN,WAAO7B,EAAMwC,UAAU,QAUAT,SAAU,QACxC,kBAAC,EAAD,CAAaF,QAVL,WAAO7B,EAAMwC,UAAU,SAUAT,SAAU,SACzC,kBAAC,EAAD,CAAaF,QAVH,WAAO7B,EAAMwC,UAAU,WAUAT,SAAU,WAC3C,kBAAC,EAAD,CAAaF,QAVN,WAAO7B,EAAMwC,UAAU,QAUAT,SAAU,WCpB9CU,EAAoC,CACtC,CAACd,IAAK,EAAGhB,KAAM,QAASiB,SAAU,QAClC,CAACD,IAAK,EAAGhB,KAAM,QAASiB,SAAU,OAClC,CAACD,IAAK,EAAGhB,KAAM,QAASiB,SAAU,OAClC,CAACD,IAAK,EAAGhB,KAAM,OAAQiB,SAAU,QACjC,CAACD,IAAK,EAAGhB,KAAM,aAAciB,SAAU,WA2C5Bc,MA5Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAfmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EAAyBF,EACjBA,EAAQE,QAAO,SAAArB,GAAM,OAAIA,EAAOG,WAAakB,KAajCE,CAAcJ,EAASE,GAG/C,OACI,6BACI,6BADJ,cAGI,6BAAK,6BAAK,6BAAK,6BAAK,6BAEpB,kBAAC,EAAD,CAEIZ,KAAMa,EACNP,UAAWA,EACXV,qBAZiB,SAACH,GAAD,OAAiBkB,EAVtB,SAACD,EAA4BjB,GACrD,OAAOiB,EAAQE,QAAO,SAAArB,GAAM,OAAIA,EAAOE,MAAQA,KASUsB,CAAaL,EAASjB,OAevE,6BAGA,+B,wCCCGuB,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAvD,EAIH,EAJGA,UAAWwD,EAId,EAJcA,cAERrC,EAEN,6GAeKsC,EAAkB,UAAMpC,IAAEkC,MAAR,YAAiBC,GAAgC,IACnEE,EAAmB,UAAM1D,GAAsB,GAA5B,YAAkCqB,IAAEsC,WAApC,YAAkDJ,EAAQlC,IAAEuC,WAAa,GAAzE,KAEzB,OACI,yBAAK5D,UAAWqB,IAAEwC,WACd,yCACIX,KAAM,OACNC,SArBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAkBrCX,WAhBe,SAACS,GACxBT,GAAcA,EAAWS,GAEf,UAAVA,EAAE1B,KACCkB,GACAA,KAYKtD,UAAS,UAAKqB,IAAE4C,WAAP,YAAqBP,IAE1BvC,IAEPoC,GAAS,2BAAOvD,UAAWyD,GAAqBF,KCP9CW,EA9B+B,SAAC,GAEzC,IADDxD,EACA,EADAA,KAAMyD,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASb,EAChC,EADgCA,MAAOc,EACvC,EADuCA,WASlCC,EAAaf,EAAQlC,IAAEkD,cAAgB,GAE7C,OACI,yBAAKvE,UAAWqB,IAAEgB,SACd,8FACA,kBAAC,EAAD,CAAgB2B,MAAOtD,EACPyC,SAAUgB,EACVnE,UAAWsE,EACXjB,WAbL,SAACS,GACF,UAAVA,EAAE1B,KACFgC,KAYgBb,MAAOA,IAEvB,kBAAC,EAAD,CAAa3B,QAASwC,EACTpE,UAAWqB,IAAEmD,KAD1B,OAGA,8BAAM,6HAA2BH,KCU9BI,EAvCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAElEjC,mBAAiB,IAFiD,mBAEnFhC,EAFmF,KAE7EkE,EAF6E,OAGhElC,mBAAiB,IAH+C,mBAGnFa,EAHmF,KAG5EsB,EAH4E,KAwBpFR,EAAaK,EAAMI,OAEzB,OACI,kBAAC,EAAD,CACIpE,KAAMA,EACNyD,gBAxBgB,SAACL,GACrBc,EAAQd,EAAEC,cAAcC,OACrBF,EAAEC,cAAcC,OACfa,EAAS,KAsBTT,QAjBQ,WACR1D,GACAiE,EAAgBjE,GAChBqE,MAAM,UAAD,OAAWrE,EAAX,OAELmE,EAAS,YAEbD,EAAQ,KAWJrB,MAAOA,EACPc,WAAYA,K,QCLTW,MA3Bf,WAAgB,IAAD,EACetC,mBAA0B,IADzC,mBACJgC,EADI,KACGO,EADH,KAWX,OACI,6BACI,6BADJ,cAIJ,6BAAK,6BAAK,6BACF,kBAAC,EAAD,CAAmBP,MAAOA,EAAOC,gBAdjB,SAACjE,GACrB,IAAMwE,EAAqB,CACvBxD,IAAKyD,cACLzE,KAAMA,GAEVuE,EAAS,CAACC,GAAF,mBAAeR,QAWnB,6BAGA,+B,iCCYGU,EAlCyC,SAAC,GASpD,EAPGlC,KAOF,IANEC,EAMH,EANGA,SAAUkC,EAMb,EANaA,gBACVrF,EAKH,EALGA,UACA8B,GAIH,EALc0B,cAKd,EAJG1B,UAEGX,EAEN,4FAOKuC,EAAmB,UAAMrC,IAAEiE,SAAR,YAAoBtF,GAAwB,IAErE,OACI,yBAAKA,UAAWqB,IAAEkE,WAClB,+BACI,yCACIrC,KAAM,WACNC,SAba,SAACW,GACtBX,GAAYA,EAASW,GACrBuB,GAAmBA,EAAgBvB,EAAEC,cAAcyB,UAY3CxF,UAAW0D,GAEPvC,IAEPW,GAAY,0BAAM9B,UAAWqB,IAAEmC,eAAgB1B,IATpD,MCoCO2D,MA5Df,WAAgB,IAAD,EACa/C,mBAAiB,IAD9B,mBACJ9B,EADI,KACE8E,EADF,KAELnC,EAAQ3C,EAAO,GAAK,QACpB+E,EAAY,WACVpC,EACAwB,MAAM,gFAENA,MAAMnE,IAPH,EAWmB8B,oBAAkB,GAXrC,mBAWJ8C,EAXI,KAWKI,EAXL,KAcX,OACI,6BACI,6BACA,6BAAK,6BAFT,cAII,6BAAK,6BAEL,yBAAK5F,UAAWqB,IAAEwE,QAEd,kBAAC,EAAD,CACI7B,MAAOpD,EACPwC,aAAcsC,EACdpC,QAASqC,EACTpC,MAAOA,IAIX,kBAAC,EAAD,CAEI3B,QAAS+D,GAFb,WAQA,kBAAC,EAAD,CACIH,QAASA,EACTH,gBAAiBO,GAFrB,kBAQA,kBAAC,EAAD,CAAeJ,QAASA,EAASrC,SAnCxB,SAACW,GAAD,OAAsC8B,EAAW9B,EAAEC,cAAcyB,aAsC9E,6BAKA,+BClDGM,MATf,WACI,OACI,iDCwBOC,MArBf,WACI,OACI,+CCUOC,MAff,WACI,OACI,6BAII,kBAAC,EAAD,MAEA,kBAAC,EAAD,QCUGC,MAdf,WACI,OACI,yBAAKjG,UAAWqB,IAAE4E,KACd,iDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3D,GACL4D,QAAQ5D,MAAMA,EAAMrD,c","file":"static/js/main.86667885.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3lUeL\",\"img\":\"Message_img__3Qw8x\",\"body\":\"Message_body__17yCu\",\"triangle\":\"Message_triangle__1YFrx\",\"title\":\"Message_title__2A8nk\",\"descr\":\"Message_descr__PzqvB\",\"text\":\"Message_text__3jD6a\",\"time\":\"Message_time__2ZjG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__1Nl_m\",\"affair\":\"Affairs_affair__1eqiT\",\"affairWrap\":\"Affairs_affairWrap__2IKAo\",\"btnWrap\":\"Affairs_btnWrap__1GO4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"SuperInputText_inputWrap__2Eeyg\",\"inputStyle\":\"SuperInputText_inputStyle__3X4m9\",\"superInput\":\"SuperInputText_superInput__31doC\",\"errorInput\":\"SuperInputText_errorInput__2qHOs\",\"error\":\"SuperInputText_error__2Re5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__3kOX7\",\"someClass\":\"Greeting_someClass__7hKob\",\"error\":\"Greeting_error__9OcUo\",\"error_message\":\"Greeting_error_message__Nx8xZ\",\"errorInputNew\":\"Greeting_errorInputNew__2HpN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelWrap\":\"SuperCheckbox_labelWrap__2M4bE\",\"checkbox\":\"SuperCheckbox_checkbox__MMStw\",\"spanClassName\":\"SuperCheckbox_spanClassName__3e2RS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__sDs07\",\"blick\":\"SuperButton_blick__1wUXq\",\"red\":\"SuperButton_red__36IOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3vy9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3hYHN\",\"column\":\"HW4_column__n3TJS\"};","import React from \"react\";\nimport m from './Message.module.css';\n\n\ntype MessageData = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageData) {\n    return (\n        <div className={m.message}>\n            <img src={props.avatar} alt=\"\" className={m.img}/>\n            <div className={m.body}>\n                <div className={m.triangle}></div>\n                <div className={m.title}>{props.name}</div>\n                <div className={m.descr}>\n                    <div className={m.text}>{props.message}</div>\n                    <div className={m.time}>{props.time}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData1 = {\n    avatar: \"https://briefly.ru/static/authors/gogol.jpg?1479846041\",\n    name: \"Николай\",\n    message: \"Саня, npm start нажимал?\",\n    time: '22:00',\n};\n\nconst messageData2 = {\n    avatar: \"https://www.ikleiner.ru/pic/picture34.jpg\",\n    name: \"Александр\",\n    message: \"Коленька, конечно нажимал\",\n    time: '22:04',\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            <br/><br/><br/>\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData1.avatar}\n                name={messageData1.name}\n                message={messageData1.message}\n                time={messageData1.time}\n            />\n            <Message\n                avatar={messageData2.avatar}\n                name={messageData2.name}\n                message={messageData2.message}\n                time={messageData2.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };\n\n    return (\n        <div className={s.affair}>\n            <div className={s.affairWrap}>\n                {props.affair._id}) {props.affair.name} - {props.affair.priority}\n            </div>\n            <SuperButton onClick={deleteCallback} children={'x'}/>\n\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (f: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')};\n    const setHigh = () => {props.setFilter('high')};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div className={s.wrapper}>\n\n            {mappedAffairs}\n            <div className={s.btnWrap}>\n            <SuperButton onClick={setAll} children={'All'}/>\n            <SuperButton onClick={setHigh} children={'High'}/>\n            <SuperButton onClick={setMiddle} children={'Middle'}/>\n            <SuperButton onClick={setLow} children={'Low'}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType =  'high' | 'middle' | 'low';\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType ):Array<AffairType> =>  {\n    if (filter === \"all\") return affairs;\n    else return affairs.filter(affair => affair.priority === filter)\n\n    ;\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(affair => affair._id !== _id)\n\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div >\n            <hr/>\n            homeworks 2\n            <br/><br/><br/><br/><br/>\n            {/*should work (должно работать)*/}\n            <Affairs\n\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${className? className: ''} ${s.superInput} ${error ? s.errorInput : ''} `; // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.inputWrap}>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={`${s.inputStyle} ${finalInputClassName}`}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <label className={finalSpanClassName}>{error}</label>}\n        </div>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nexport type GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n\n\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n\n    const pressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            addUser()\n        }\n    }\n    const inputClass = error ? s.errorInputNew : '';\n\n    return (\n        <div className={s.wrapper}>\n            <h3>Введите имя:</h3>\n            <SuperInputText value={name}\n                            onChange={setNameCallback}\n                            className={inputClass}\n                            onKeyPress={pressEnter}\n                            error={error}/>\n\n            <SuperButton onClick={addUser}\n                         className={s.btn}>\n                add</SuperButton>\n            <span><b>Кол-во участников: </b>{totalUsers}</span>\n\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\nimport Greeting, {GreetingPropsType} from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value);\n        if(e.currentTarget.value){\n            setError('')\n        }\n    };\n\n\n    const addUser = () => {\n        if (name) {\n            addUserCallback(name)\n            alert(`Hello  ${name}!`);\n        } else {\n            setError('add name')\n        }\n        setName('')\n\n    };\n\n    const totalUsers = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n\n\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback = (name: string) => {\n        const newUsers: UserType = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([newUsers, ...users]);\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n    <br/><br/><br/>\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <div className={s.labelWrap}>\n        <label >\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> {/*благодаря label нажатие на спан передастся в инпут*/}\n        </div>\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            <br/><br/>\n            homeworks 4\n            <br/><br/>\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    // red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    children text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            {/*<Route path={\"/\"} exact render={() => <Redirect to={PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}